import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px

st.set_page_config(page_title="Painel Anal√≠tico sobre Obesidade", layout="wide")

df = pd.read_csv('Obesity.csv')

#Traduzindo o as op√ß√µes de escolha para o portugu√™s

dic_genero = {'Male':'Masculino','Female':'Feminino'}
dic_family_history = {"yes" : "sim","no" : "n√£o"}
dic_FAVC = {"yes" : "sim","no" : "n√£o"}
dic_caec = {"no" : "N√ÉO","Sometimes":"as vezes","Frequently":"frequentemente", "Always":"sempre"}
dic_smoke = {"yes" : "sim","no" : "n√£o"}
dic_scc = {"yes" : "sim","no" : "n√£o"}
dic_calc = {"no":"n√£o" ,"Sometimes":"as vezes" , "Frequently":"frequentemente" , "Always":"sempre"}
dic_mtrans = {"Public_Transportation":"transporte p√∫blico","Walking":"caminhada", "Automobile":"autom√≥vel", "Motorbike":"motocicleta", "Bike":"bicicleta"}
dic_obesity = {
                "Normal_Weight": "Peso Normal",
                "Insufficient_Weight": "Peso Insuficiente",
                "Obesity_Type_I": "Obesidade Tipo I",
                "Obesity_Type_II": "Obesidade Tipo II",
                "Obesity_Type_III": "Obesidade Tipo III",
                "Overweight_Level_I": "Sobrepeso N√≠vel I",
                "Overweight_Level_II": "Sobrepeso N√≠vel II"}

df['Gender'] = df['Gender'].map(dic_genero)
df['family_history'] = df['family_history'].map(dic_family_history)
df['FAVC'] = df['FAVC'].map(dic_FAVC)
df['CAEC'] = df['CAEC'].map(dic_caec)
df['SMOKE'] = df['SMOKE'].map(dic_smoke)
df['SCC'] = df['SCC'].map(dic_scc)
df['CALC'] = df['CALC'].map(dic_calc)
df['MTRANS'] = df['MTRANS'].map(dic_mtrans)
df['Obesity'] = df['Obesity'].map(dic_obesity)



#Ajustando valor de colunas para representar numero inteiro
df['Age']=df['Age'].round(0)
df['Height']=df['Height'].round(2)
df['Weight']=df['Weight'].round(0)
df['NCP']=df['NCP'].round(0)
df['NCP']=df['NCP'].astype(int)
df['FCVC']=df['FCVC'].round(0)
df['FCVC']=df['FCVC'].astype(int)
#df['Age']=df['Age'].astype(int)
#df['FCVC']=pd.to_numeric(df['FCVC'])

df['ambos'] = 'Ambos'

#Dicion√°rio das colunas 
#‚óè Gender: G√™nero.
#‚óè Age: Idade.
#‚óè Height:Altura em metros.
#‚óè Weight: Peso em kgs.
#‚óè family_history: Algum membro da fam√≠lia sofreu ou sofre de excesso de peso?
#‚óè FAVC: Voc√™ come alimentos altamente cal√≥ricos com frequ√™ncia?
#‚óè FCVC: Voc√™ costuma comer vegetais nas suas refei√ß√µes?
#‚óè NCP: Quantas refei√ß√µes principais voc√™ faz diariamente?
#‚óè CAEC: Voc√™ come alguma coisa entre as refei√ß√µes?
#‚óè SMOKE: Voc√™ fuma?
#‚óè CH2O: Quanta √°gua voc√™ bebe diariamente?
#‚óè SCC: Voc√™ monitora as calorias que ingere diariamente?
#‚óè FAF: Com que frequ√™ncia voc√™ pratica atividade f√≠sica?
#‚óè TER: Quanto tempo voc√™ usa dispositivos tecnol√≥gicos como celular, videogame, televis√£o, computador e outros?
#‚óè CALC: Com que frequ√™ncia voc√™ bebe √°lcool?
#‚óè MTRANS: Qual meio de transporte voc√™ costuma usar?
#‚óè Obesity_level (coluna alvo): N√≠vel de obesidade

with st.sidebar:
        #st.title("Filtros")
        st.header("")
        st.write("")

st.header("üìä Painel Anal√≠tico sobre Obesidade")

st.markdown("A obesidade √© uma doen√ßa cr√¥nica, progressiva, com causas multifatoriais associadas principalmente a estilo de vida (sedentarismo, h√°bitos alimentares inadequados) e tamb√©m a outras condi√ß√µes, como fatores gen√©ticos, heredit√°rios, psicol√≥gicos, culturais e √©tnicos.")
st.markdown("*Fonte: https://abeso.org.br*")

st.subheader("Panorama Geral da Base Estudada")

st.metric('Quantidade total de pessoas', df['Gender'].count())

valor1 = 'Obesidade Tipo I'
valor2 = 'Obesidade Tipo II'
valor3 = 'Obesidade Tipo III'

total = df['Gender'].count()



col1, col2 = st.columns(2)

with col1:
    st.write("Informa√ß√µes Genero Maculino")
    st.metric('Quantidade', df['Gender'][df['Gender']=='Masculino'].count())
    
    df_masc_total = df[(df['Gender']=='Masculino')].count()
    df_masc_obesity = df[(df['Gender']=='Masculino') & (df['Obesity'] == valor1) | (df['Obesity'] == valor2) | (df['Obesity'] == valor3)]
    total_masc_obesity = df_masc_obesity['Obesity'].count()
    perc_masc_obesity = (total_masc_obesity / df_masc_total)*100

    df_filterM = df[df['Gender']=='Masculino']
    mediaPesoM = df_filterM['Weight'].mean()
    st.write(f"M√©dia de peso: {mediaPesoM:.2f} Kg.")

    mediaIdadeM = df_filterM['Age'].mean()
    st.write(f"M√©dia de idade: {mediaIdadeM:.0f} anos.")

    st.metric('Qtde. Obesos (Tipo I, II e III)', total_masc_obesity)

with col2:
    st.write("Informa√ß√µes Genero Feminino")
    st.metric('Quantidade', df['Gender'][df['Gender']=='Feminino'].count())

    df_fem_total = df[(df['Gender']=='Feminino')].count()
    df_fem_obesity = df[(df['Gender']=='Feminino') & (df['Obesity'] == valor1) | (df['Obesity'] == valor2) | (df['Obesity'] == valor3)]
    total_fem_obesity = df_fem_obesity['Obesity'].count()
    perc_fem_obesity = (total_fem_obesity / df_masc_total)*100
    

    df_filterF = df[df['Gender']=='Feminino']
    mediaPesoF = df_filterF['Weight'].mean()
    st.write(f"M√©dia de peso: {mediaPesoF:.2f} Kg.")

    mediaIdadeF = df_filterF['Age'].mean()
    st.write(f"M√©dia de idade: {mediaIdadeF:.0f} anos.")

    st.metric('Qtde. Obesos (Tipo I, II e III)', total_fem_obesity)


st.markdown("Os n√∫meros gerais acima j√° indicam que 75% das pessoas estudadas de ambos os generos est√£o obesos.")

#filtro de genero
genero_escolhido = st.sidebar.multiselect('Selecione um genero ou ambos :',df['Gender'].unique(),df['Gender'].unique())

if genero_escolhido == 'Feminino' and 'Masculino':
    df_filtrado = df.loc[(df['Gender']=='Feminino') & (df['Gender']=='Masculino')]
else:
    df_filtrado = df.loc[df['Gender'].isin(genero_escolhido)]


hist = px.histogram(data_frame=df_filtrado, x='Age', title="Histograma por Idade", labels={'Age' : 'idade'})
st.plotly_chart(hist, key='plot1')

st.markdown("Nota-se que a base √© constitu√≠da em grande parte de pessoas mais jovens (entre 17 e 26 anos).")
st.markdown("No gr√°fico seguinte √© poss√≠vel observar uma eleva√ß√£o quase que constante de peso ap√≥s os 16 anos.")

mediaPeso = df_filtrado.groupby('Age')['Weight'].mean().reset_index()
fig1 = px.line(mediaPeso,x='Age',y='Weight',
             title = 'M√©dia de peso por idade', 
             labels={'Weight' : 'Peso', 'Age': 'Idade'})
fig1.update_layout(barmode='group')
st.plotly_chart(fig1, key='plot3')


st.markdown("No gr√°fico seguinte vemos que grande parte as pessoas mais jovens est√£o obesas.")
df_contagem_obesity = df_filtrado.groupby(['Age','Obesity']).size().reset_index(name='Quantidade')
st.bar_chart(df_contagem_obesity,x='Obesity',y='Quantidade', color='Age',horizontal=True)


st.markdown("No gr√°fico seguinte observa-se um certo equilibrio entre os generos quanto a sobrepeso e obesidade na popula√ß√£o da base analisada, por√©m um detalhe chama a aten√ß√£o h√° uma concentra√ß√£o de pessoas em um tipo de obesidade, no feminino obesidade tipo III e no masculino obesidade tipo II.")
df_contagem_obesity = df_filtrado.groupby(['Gender','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='Gender',
             title = 'Classifica√ß√£o por genero', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'Gender' : 'Genero'})
fig.update_layout(barmode='group')
st.plotly_chart(fig, key='plot2')          


st.subheader("Caracter√≠sticas e H√°bitos")

st.markdown("Grande parte das pessoas com sobrepeso e obesidade consomem frequentemente alimentos altamente cal√≥ricos conforme observa-se no gr√°fico a seguir.")
st.markdown("Esses alimentos, ricos em gorduras e a√ß√∫cares, muitas vezes s√£o processados ou ultraprocessados, com baixo valor nutricional e alta densidade cal√≥rica.") 

df_contagem_obesity = df_filtrado.groupby(['FAVC','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='FAVC',
             title = 'Voc√™ come alimentos altamente cal√≥ricos com frequ√™ncia?', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'FAVC' : 'Resposta'},)
fig.update_layout(barmode='group')
st.plotly_chart(fig, key='plot4')

st.markdown("No gr√°fico abaixo, identificamos que mesmo as pessoas com peso insuficiente, tem o h√°bito de fazer 3 refei√ß√µes di√°rias, o que pode ser um ind√≠cio a que a qualidade das refei√ß√µes destas pessoas n√£o suprem a necessidade nutricional.")
df_contagem_obesity = df_filtrado.groupby(['NCP','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='NCP',
             title = 'Quantas refei√ß√µes principais voc√™ faz diariamente?', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'NCP' : 'Qtd de refei√ß√µes'},)
fig.update_layout(barmode='group')
st.plotly_chart(fig, key='plot5')

st.markdown("O gr√°fico abaixo nos mostra que a maioria das pessoas com alguma obesidade ou sobrepeso as vezes consomem algo entre as refei√ß√µes")
st.markdown("Nos demais tipos, peso normal e insuficiente, curiosamente tem um grupo de pessoas que responderam que consomem algo frequentemente, no peso normal a maioria s√£o do genero masculino e no insuficiente o feminino.")
df_contagem_obesity = df_filtrado.groupby(['CAEC','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='CAEC',
             title = 'Voc√™ come alguma coisa entre as refei√ß√µes?', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'CAEC' : 'Resposta'},)
fig.update_layout(barmode='group')
st.plotly_chart(fig, key='plot6')


st.markdown("O consumo de vegetais nas refei√ß√µes, est√° bem distribu√≠do entre os tipos de obesidade, portanto n√£o h√° uma rela√ß√£o direta com algum perfil em especifico.")
df_contagem_obesity = df_filtrado.groupby(['FCVC','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='FCVC',
             title = 'Voc√™ costuma comer vegetais nas suas refei√ß√µes?', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'FCVC' : 'Qtd de vezes'},)
fig.update_layout(barmode='group')
st.plotly_chart(fig, key='plot7')

st.markdown("Abaixo observamos uma rela√ß√£o, quanto maior a obesidade (tipo I, II, III), maior a quantidade de pessoas que consomem alcool esporadicamente (as vezes).")
df_contagem_obesity = df_filtrado.groupby(['CALC','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='CALC',
             title = 'Com que frequencia voc√™ bebe alcool?', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'CALC' : 'Resposta'},)
fig.update_layout(barmode='group')
st.plotly_chart(fig, key='plot8')

st.markdown("Aparentemente o consumo de cigarros n√£o representa uma caracteristica de nenhum tipo de obesidade.")
df_contagem_obesity = df_filtrado.groupby(['SMOKE','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='SMOKE',
             title = 'Voc√™ fuma?', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'SMOKE' : 'Resposta'},)
fig.update_layout(barmode='group')
st.plotly_chart(fig,key='plot9')

st.markdown("A maioria das das pessoas com algum tipo de sobrepeso ou obesidade possuem historico familias com membros com obesidade ou sobrepeso.")
df_contagem_obesity = df_filtrado.groupby(['family_history','Obesity']).size().reset_index(name='valor')
fig = px.bar(df_contagem_obesity,x='Obesity',y='valor', color='family_history',
             title = 'Algum membro da fam√≠lia sofreu ou sofre de excesso de peso?', 
             labels={'valor' : 'Quantidade de pessoas', 'Obesity': 'Classifica√ß√£o', 'family_history' : 'Resposta'},)
fig.update_layout(barmode='group')
st.plotly_chart(fig, key='plot10')



st.subheader("Base Completa com filtro por N√≠vel de Obesidade")

tipo_obeso = st.selectbox('Classifica√ß√£o :',df['Obesity'].unique())
df_filtrado_obeso = df.loc[df['Obesity']==tipo_obeso]


df_filtrado_obeso = df_filtrado_obeso.rename(columns={
     'Gender':'Genero',
     'Age':'Idade',
     'Height':'Altura',
     'Weight': 'Peso',
     'family_history': 'Hist√≥rico Familiar',
     'FAVC':'Consome alimentos altamente caloricos?',
     'FCVC':'Consome vegetais?',
     'NCP':'Qtde. refei√ß√µes principais di√°rias',
     'CAEC':'Come alguma coisa entre as refei√ß√µes?',
     'SMOKE':'Fuma?',
     'CH2O':'Quanta √°gua voc√™ bebe diariamente?',
     'SCC':'Monitora as calorias?',
     'FAF':'Frequencia atividade f√≠sica',
     'TUE':'Tempo de uso de dispositivos tecnologicos',
     'CALC':'Com que freq. bebe alcool?',
     'MTRANS':'Tipo de Transporte que mais usa',
     'Obesity':'Obesidade'
})

df_base = df_filtrado_obeso.drop([
     'ambos',
     'Obesidade'
],axis=1)

st.dataframe(df_base)

st.subheader("Conclus√£o:")
st.markdown("Com base nos n√∫meros e gr√°ficos apresentados acima podemos concluir que a obesidade est√° muito presente principalmente na popula√ß√£o mais jovem, de acordo com proje√ß√£o realizada pela Comiss√£o Lancet* sobre sa√∫de e bem-estar dos adolescentes, cerca de 464 milh√µes de adolescentes do mundo ter√£o sobrepeso ou obesidade at√© 2030. " \
" Os h√°bitos di√°rios e hist√≥rico familiar tamb√©m est√£o diretamente relacionados a exist√™ncia de obesidade e sobrepeso. O acompanhamento m√©dico, do estilo de vida, dos h√°bitos alimentares e a conscientiza√ß√£o sobre os riscos √© crucial para combater a obesidade. " \
"Al√©m disso, no caso dos adolescentes, o apoio familiar tamb√©m se mostra muito importante. " \
"Em alguns casos, interven√ß√µes como medicamentos ou cirurgia bari√°trica pode ser necess√°rio. " \
"Portanto, √© importante avaliar a melhor estrat√©gia para cada indiv√≠duo e lidar com as causas e consequ√™ncias da obesidade. " \
"")

st.markdown("**Refer√™ncia: https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(25)00397-6/fulltext*")
